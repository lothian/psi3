.ds OS UNIX

'	# month name
.  \".if "\nd"0" .nr m \n(mo-1
.  \".if "\nm"0" .ds ]m January
.  \".if "\nm"1" .ds ]m February
.  \".if "\nm"2" .ds ]m March
.  \".if "\nm"3" .ds ]m April
.  \".if "\nm"4" .ds ]m May
.  \".if "\nm"5" .ds ]m June
.  \".if "\nm"6" .ds ]m July
.  \".if "\nm"7" .ds ]m August
.  \".if "\nm"8" .ds ]m September
.  \".if "\nm"9" .ds ]m October
.  \".if "\nm"10" .ds ]m November
.  \".if "\nm"11" .ds ]m December
'	# set the date
.  \".if n \{.nr m \nm+1
.  \".	 ie \nd .ds ]W Modified \nm/\nd/\ny
.  \".	 el .ds ]W Printed \n(mo/\n(dy/\n(yr\}
.  \".if t \{.ie \nd .ds ]W \*(]m \nd, 19\ny
.  \".	 el .ds ]W \*(]m \n(dy, 19\n(yr\}
'	# end of commented out chunk
.if t .tr *\(**
.ie n \{\
.	ds lq \&"\"
.	ds rq \&"\"
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.\}
.de UC
.  \".if t \{\
.  \".	ie "\\$1"" .ds ]W 3rd Berkeley Distribution
.  \".	ie "\\$1"4" .ds ]W \\$1th Berkeley Distribution
.  \".	el .ds ]w \\$2 \\$1 BSD
.  \".\}
..
'	# reset the basic page layout
.de }E
.}f
.in \\n()Ru+\\n(INu
.ll \\n(LLu
..
'	# default tabs
.de DT
'ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i 6i 6.5i
..
'	# set type font and size
.de }f
.ps 10
.ft 1
..
'	# handle the head of the page
.de }H
.ev 1
.}C
'sp .5i
.ft 1
.ps 10
.tl \\*(]H\\*(]D\\*(]H
'sp .5i
.ev
.ns
..
'	# handle the foot of the page
.de }F
.ev 1
.ft 1
.ps 10
'sp .5i
.if !\\nD .tl \\*(]W\\*(]L\\*(PN%
.if  \\nD .if o .tl \\*(]W\\*(]L\\*(PN%
.if  \\nD .if e .tl \\*(PN%\\*(]L\\*(]W
.if !\\nX 'bp
.if \\nX .if \\n%>=\\nX \{\
.ds PN \\n%
.pn 1
.af % a
.nr X 0
'bp 1\}
.if \\nX .if \\n%<\\nX 'bp
.ev
..
'	# the cut mark -- we don't need this -- Henry
.  \".if n .ig
.  \".de }C
.  \".po .1i
.  \".tl '-'
.  \".po
.  \"..
'	# the final cut mark -- we don't need this -- Henry
.  \".de }M
.  \".}N
.  \".wh -1p }C
.  \".ll \\n(LLu
.  \"..
'	# no runout unless there was a .TH
.de }K
.}N
.pl 1
.ll \\n(LLu
..
.em }K
'	# set title and heading
.de TH
.PD
.DT
.if n .nr IN .5i
.if t .nr IN .5i
.ll 6.5i
.nr LL \\n(.l
.ds ]H \\$1\|(\|\\$2\|)
.ds ]D MISC. REFERENCE MANUAL PAGES
.if '\\$2'1' .ds ]D PSI COMMANDS FOR \\*(pT
.if '\\$2'2' .ds ]D PSI COMMON INPUT FOR \\*(pT
.if '\\$2'3' .ds ]D PSI PROCEDURES FOR \\*(pT
.if '\\$2'4' .ds ]D PSI EXAMPLES FOR \\*(pT
.if '\\$2'5' .ds ]D PSI LIBRARY
.if !'\\$4''  .ds ]W \\$4
.if !'\\$5''  .ds ]D \\$5
.wh 0 }H
.if t .wh -1i }F
.if n .wh -1.167i }F
.em }M
.if !\\n(nl .if !\\nP .nr P 1
.if !\\n(nl .if \\nP .pn \\nP
.if \\nX .if \\nP>=\\nX \{\
.ds PN \\nP
.pn 1
.af % a
.nr X 0 \}
.if !\\n(nl .if \\nP .nr P 0
.if  \\nC .if \\n(nl .bp
.if  !\\nC .if \\n(nl .bp 1
.ds ]L Last change: \\$3
.}E
.DT
.nr )I .5i
.nr )R 0
.  \".if n .na
.mk ka
.if !'\\n(ka'-1' .bp
..
'	# IX - Make an Index Entry
.de IX
.if \\nF .tm .IE\tENTRY\t\\$1\t\\$2\t\\$3\t\\$4\t\\$5\t\\$6\t\\*(PN\\n%
..
'	# TX - Resolve a Title Reference
.de TX
.ds Tx "UNKNOWN TITLE ABBREVIATION: \\$1
.if '\\$1'GSBG' .ds Tx "Getting Started 
.if '\\$1'SUBG' .ds Tx "Customizing SunOS
.if '\\$1'SHBG' .ds Tx "Basic Troubleshooting
.if '\\$1'SVBG' .ds Tx "SunView User's Guide
.if '\\$1'MMBG' .ds Tx "Mail and Messages
.if '\\$1'DMBG' .ds Tx "Doing More with SunOS
.if '\\$1'UNBG' .ds Tx "Using the Network
.if '\\$1'GDBG' .ds Tx "Games, Demos & Other Pursuits
.if '\\$1'CHANGE' .ds Tx "SunOS 4.1 Release Manual
.if '\\$1'INSTALL' .ds Tx "Installing SunOS 4.1
.if '\\$1'ADMIN' .ds Tx "System and Network Administration
.if '\\$1'SECUR' .ds Tx "Security Features Guide
.if '\\$1'PROM' .ds Tx "PROM User's Manual
.if '\\$1'DIAG' .ds Tx "Sun System Diagnostics
.if '\\$1'SUNDIAG' .ds Tx "Sundiag User's Guide
.if '\\$1'MANPAGES' .ds Tx "SunOS Reference Manual
.if '\\$1'REFMAN' .ds Tx "SunOS Reference Manual
.if '\\$1'SSI' .ds Tx "Sun System Introduction
.if '\\$1'SSO' .ds Tx "System Services Overview
.if '\\$1'TEXT' .ds Tx "Editing Text Files
.if '\\$1'DOCS' .ds Tx "Formatting Documents
.if '\\$1'TROFF' .ds Tx "Using \&\fBnroff\fP and \&\fBtroff\fP
.if '\\$1'INDEX' .ds Tx "Global Index
.if '\\$1'CPG' .ds Tx "C Programmer's Guide
.if '\\$1'CREF' .ds Tx "C Reference Manual
.if '\\$1'ASSY' .ds Tx "Assembly Language Reference
.if '\\$1'PUL' .ds Tx "Programming Utilities and Libraries
.if '\\$1'DEBUG' .ds Tx "Debugging Tools
.if '\\$1'NETP' .ds Tx "Network Programming
.if '\\$1'DRIVER' .ds Tx "Writing Device Drivers
.if '\\$1'STREAMS' .ds Tx "STREAMS Programming
.if '\\$1'SBDK' .ds Tx "SBus Developer's Kit
.if '\\$1'WDDS' .ds Tx "Writing Device Drivers for the SBus
.if '\\$1'FPOINT' .ds Tx "Floating-Point Programmer's Guide
.if '\\$1'SVPG' .ds Tx "SunView\ 1 Programmer's Guide
.if '\\$1'SVSPG' .ds Tx "SunView\ 1 System Programmer's Guide
.if '\\$1'PIXRCT' .ds Tx "Pixrect Reference Manual
.if '\\$1'CGI' .ds Tx "SunCGI Reference Manual
.if '\\$1'CORE' .ds Tx "SunCore Reference Manual
.if '\\$1'4ASSY' .ds Tx "Sun-4 Assembly Language Reference
.if '\\$1'SARCH' .ds Tx "\s-1SPARC\s0 Architecture Manual
.	# non-Sun titles
.if '\\$1'KR' .ds Tx "The C Programming Language
\fI\\*(Tx\fP\\$2
..
'	# section heading
.de SH
.}X 0
.nr )E 2
\&\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6
..
'   # sub section heading
.de SS
.}X .25i "" ""
.nr )E 2
\&\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6
.br
..
'	# subroutine for section heading
.de }X
.}E
.ti \\$1
.sp \\n()Pu
.ne 2
.nr )R 0
.fi
.it 1 }N
.SM
.B
..
'	# end of SH (cf }X above and }N below)
.de }2
.nr )E 0
.}E
.nr )I .5i
.ns
..
'	# italic
.de I
.ft 2
.it 1 }N
.if !"\\$1"" \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
'	# bold
.de B
.ft 3
.it 1 }N
.if !"\\$1"" \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
'	# small
.de SM
.ps 9
.it 1 }N
.if !"\\$1"" \&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
'	# combinations of Roman, italic, bold
.de RI
.}S 1 2 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de VS
'if '\\$1'4' .mc \s12\(br\s0
..
.de VE
'mc
..
.de RB
.}S 1 3 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de IR
.}S 2 1 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de IB
.}S 2 3 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de BR
.}S 3 1 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
.de BI
.}S 3 2 \& "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6"
..
'	# make special case of shift out of italic
.de }S
.ds ]F
.if "\\$1"2" .if !"\\$5"" .ds ]F\^
.ie !"\\$4"" .}S \\$2 \\$1 "\\$3\f\\$1\\$4\\*(]F" "\\$5" "\\$6" "\\$7" "\\$8" "\\$9"
.el \\$3
.}f
..
'	# small and boldface
.de SB
\&\fB\s-1\&\\$1 \\$2 \\$3 \\$4 \\$5 \\$6\s0\fR
..
'	# paragraph
.de LP
.PP
..
.de PP
.sp \\n()Pu
.ne 2
.}E
.nr )I .5i
.ns
..
'	# paragraph distance
.de PD
.if t .nr )P .4v
.if n .nr )P 1v
.if !"\\$1"" .nr )P \\$1v
..
'	# hanging indent
.de HP
.sp \\n()Pu
.ne 2
.if !"\\$1"" .nr )I \\$1n
.ll \\n(LLu
.in \\n()Ru+\\n(INu+\\n()Iu
.ti \\n()Ru+\\n(INu
.}f
..
'	# indented paragraph
.de IP
.TP \\$2
\&\\$1
..
'	# hanging label
.de TP
.if !"\\$1"" .nr )I \\$1n
.sp \\n()Pu
.in \\n()Ru
.nr )E 1
.ns
.it 1 }N
.di ]B
..
'	# end of TP (cf }N below)
.de }1
.ds ]X \&\\*(]B\\
.nr )E 0
.if !"\\$1"" .nr )I \\$1n
.}f
.ll \\n(LLu
.in \\n()Ru+\\n(INu+\\n()Iu
.ti \\n(INu
.ie !\\n()Iu+\\n()Ru-\w\\*(]Xu-3p \{\\*(]X
.br\}
.el \\*(]X\h|\\n()Iu+\\n()Ru\c
.}f
..
'	# handle end of 1-line features
.de }N
.if \\n()E .br
.di
.if "\\n()E"0" .}f
.if "\\n()E"1" .}1
.if "\\n()E"2" .}2
.nr )E 0
..
'	# increase relative indent
.de RS
.nr ]\\n+()p \\n()I
.nr )\\n()p \\n()R
.ie !"\\$1"" .nr )R +\\$1n
.el .nr )R +\\n()I
.nr )I .5i
.}E
..
'	# decrease relative indent
.de RE
.if !"\\$1"" \{.ie "\\$1"0" .nr )p 1 1
.		el .nr )p \\$1 1\}
.ds ]i \\*(]I\\n()p
.ds ]r \\*(]R\\n()p
.nr )I \\*(]i
.nr )R \\*(]r
.if \\n()p .nr )p -1
.}E
..
.nr )p 0 1
.ds ]I \\\\n(]
.ds ]R \\\\n()
.bd S 3 3
.if t .ds R \(rg
.if n .ds R (Reg.)
.ds S \s10
.hy 14

.if !'\*(Lv'ADVANCED' .ig
.ds pT \*(Lv \*(OS USERS
..
.if '\*(Lv'ADVANCED' .ig
.ds pT \*(OS USERS
..

.ds ]W Psi Release 3.0

.\" This is used to ignore blanks on a line
.\" Its purpose is to make the troff input look prettier.
.de __
\\$1
..

.\" Start List
.de sL                  \" .sL: start an optional list
.di dL
.LP   \" This resets some things, apparently
.nf
..

.\" End List
.de eL                  \" .eL: end an optional list under heading $1
.di
.fi
.\" The number 40 on the following line must be change if sL or eL are changed
.if \\n(dn>40  \{\
.\"SH \\$1 -- \\n(dn \" Use this line for debugging
.SH \\$1
.nf
.dL
.fi
.\}
..

.\" The input skip string, used to space headings.
.ds sS \0\0\0\0\0\0\0

.\" Input Section Header
.iS
.de iS
.LP
.nf
\\$1
.fi
..

.\" Input Line
.de iL
.IP "\\$1" 7
.if !'\\$2'' \{\
\\$2
.\}
..

.\" Input Option
.de iO
.IP "\\*(sS\\$1" 14
.if !'\\$2'' \{\
\\$2
.\}
..

.\" Input Option Value
.de iV
.IP "\\*(sS\\*(sS\\$1" 21
.if !'\\$2'' \{\
\\$2
.\}
..

.\" Start CMS
.de sC
.if !'\\*(OS'CMS' .ig eC
..
.\" End Advanced with .eC

.\" Start UNIX
.de sU
.if !'\\*(OS'UNIX' .ig eU
..
.\" End Advanced with .eU

.\" Start Advanced
.de sA
.if !'\\*(Lv'ADVANCED' .ig eA
..
.\" End Advanced with .eA

.\" Start Beginner
.de sB
.if !'\\*(Lv'' .ig eB
..
.\" End Beginner with .eB

.\" Psi Name
.de pN                  \" .pN: convert a generic file name to a specific name
.ta 2.5in
.if '\*(OS'CMS' \{\
. ds pO \\$1
. if '\\$1'OUTPUT' .ds pO             \" Unix only
. if '\\$1'BASIS' .ds pO BASIS DATA
. if '\\$1'PBASIS' .ds pO PBASIS DATA
. if '\\$1'HVIB_IN'  .ds pO HVIB15
. if '\\$1'HVIB_OUT' .ds pO FILE15
. if '\\$1'FILE91A' .ds pO FILE91
. if '\\$1'FILE92A' .ds pO FILE92
. if !'\\*(pO'' \\$3\\*(pO\\$2
.\}
.if '\*(OS'UNIX' \{\
. ds pO \\$1
. if '\\$1'INPUT' .ds pO input.dat
. if '\\$1'LMO' .ds pO lmo.dat
. if '\\$1'CONTOUR' .ds pO contour.ps
. if '\\$1'CMO' .ds pO cmo.dat
. if '\\$1'BASIS' .ds pO basis.dat
. if '\\$1'PBASIS' .ds pO pbasis.dat
. if '\\$1'RESUL1' .ds pO resul1.dat
. if '\\$1'RESUL2' .ds pO resul2.dat
. if '\\$1'RESUL3' .ds pO             \" CMS only
. if '\\$1'SLOFILE' .ds pO            \" CMS only
. if '\\$1'INTDERO' .ds pO            \" CMS only
. if '\\$1'MAKEFT' .ds pO resul3.dat
. if '\\$1'INTDER1' .ds pO intder1.dat
. if '\\$1'INTDIFO' .ds pO intdifo.dat
. if '\\$1'IDER'   .ds pO ider.dat
. if '\\$1'OPDM48' .ds pO file51.dat
. if '\\$1'HVIB_IN' .ds pO file15.dat
. if '\\$1'HVIB_OUT' .ds pO file16.dat
. if '\\$1'FILE12A' .ds pO file12a.dat
. if '\\$1'FILE16A' .ds pO file16a.dat
. if '\\$1'FILE21A' .ds pO file21a.dat
. if '\\$1'FILE11' .ds pO file11.dat
. if '\\$1'FILE12' .ds pO file12.dat
. if '\\$1'FILE13' .ds pO file13.dat
. if '\\$1'FILE14' .ds pO file14.dat
. if '\\$1'TOTAL15' .ds pO total15.dat
. if '\\$1'TOTAL20' .ds pO total20.dat
. if '\\$1'FILE15' .ds pO file15.dat
. if '\\$1'FILE16' .ds pO file16.dat
. if '\\$1'FILE17' .ds pO file17.dat
. if '\\$1'FILE18' .ds pO file18.dat
. if '\\$1'FILE19' .ds pO file19.dat
. if '\\$1'FILE20' .ds pO file20.dat
. if '\\$1'FILE21' .ds pO file21.dat
. if '\\$1'FILE22' .ds pO file22.dat
. if '\\$1'FILE23' .ds pO file23.dat
. if '\\$1'FILE24' .ds pO file24.dat
. if '\\$1'FILE25' .ds pO file25.dat
. if '\\$1'FILE91A' .ds pO file91a.dat
. if '\\$1'FILE92A' .ds pO file92a.dat
. if '\\$1'CHECK' .ds pO tape3.dat
. if '\\$1'OUTPUT' .ds pO output.dat\" Unix only
. if '\\$1'FILE6' .ds pO              \" CMS only
. if '\\$1'BMAT' .ds pO input.dat
. if '\\$1'INTCO' .ds pO intco.dat
. if '\\$1'GEOM' .ds pO geom.dat
. if '\\$1'FCONST' .ds pO fconst.dat
. if !'\\*(pO'' \\$3\\*(pO\\$2
.\}
..                      \" End of .pN macro definition



.TH oeprop 1 " March 30, 2001" "\*(]W" "\*(]D"
.  \"
.  \" Notice of Document Modification
.  \"
.  \"   man page created by Edward Valeev, 15 Jan 98
.  \"
.  \"
.SH NAME
oeprop \- One-Electron Property Program

.SH DESCRIPTION
.LP
The program
.B oeprop
computes expectation values of one-electron property operators using
a one-particle density
matrix computed from an eigenvector in file30 or read in from an external file.
It is currently capable of performing Mulliken population analysis, 
computing electric multipole moments through octopole, 
electrostatic properties at atomic centers (electrostatic potential, 
electric field, electric field gradient, electron and spin density, dipolar anisotropic
contribution to the hyperfine coupling constants), 
electron and spin density, electron and spin density gradient,
Laplacian of electron and spin densities, electrostatic potential 
over an arbitrary two-dimensional (planar) rectangular grid,
and molecular orbitals values over an arbitrary three-dimensional
rectangular grid.
Miscellaneous capabilities include computation 
of the relativistic first-order one-electron corrections to the energy
(mass-velocity and Darwin terms), 
construction of natural molecular orbitals from one-particle density 
read from an external file (NOs can be written to file30) and 
computation of spatial
extents - expectation values of X^2, Y^2, Z^2, and R^2 operators - of
total electron density and of individual MOs (if \fBREAD_OPDM = \fPfalse)
or natural (if \fBREAD_OPDM = \fPtrue) orbitals (\fBMPMAX\fP must be set to
a value greater than 1 for computing these entities). Spatial extents should
be used cautiously, since they depend on the reference point.

.SH COMPATIBILITY
.LP
The program 
.B oeprop
is fully backward compatible with the earlier PSI property 
programs (\fBproper\fP, \fBciprop\fP, 
and \fBccprop\fP). By default \fBoeprop\fP will produce the same
information as the \fBproper\fP code.
To emulate the \fBciprop\fP and \fBccprop\fP programs,
the \fBWFN\fP keyword should be set to CI and CC respectively.
The only difference is that 
unlike the \fBciprop\fP program, \fBoeprop\fP must be run after \fBcphfci\fP 
to obtain correlation corrections to the multipole moments.

.SH REFERENCES
.LP
Mulliken population analysis
.IP "1."
Electronic Population Analysis on LCAO-MO Molecular Wave Functions.
R. S. Mulliken, J. Chem. Phys. 23, 1833 (1955), ibid. 23, 1841 (1955), ibid.
36, 3428 (1962).
.LP
Recurrence relations for one-electron integrals over Cartesian Gaussian
functions.
.IP "1."
Efficient recursive computation of molecular integrals over Cartesian
Gaussian functions. S. Obara and A. Saika,
J. Phys. Chem. 84, 3963 (1986).
.LP
Fundamental physical constants and conversion factors.
.IP "1."
CRC Handbook of chemistry and physics. Edited by D. R. Lide. 73rd edition
(1992-1993).
.sL
.pN INPUT   "	Input file"
.pN FILE30  "	Checkpoint file"
.pN FILE86  "   Z-vector file (only if \fBCORREL_CORR = \fPtrue)"
.eL "FILES REQUIRED"

.sL
.pN 
.eL "TEMPORARY FILES USED"

.sL
.pN OUTPUT
.pN dipmom.dat "   Dipole moments"
.pN esp.dat    "      Electrostatic potential on a 2D grid"
.pN edens.dat  "    Electron density on a 2D grid"
.pN edgrad.dat "   Electron density gradient on a 2D grid"
.pN edlapl.dat "   Laplacian of the electron density on a 2D grid"
.pN sdens.dat  "    Spin density on a 2D grid"
.pN sdgrad.dat "   Spin density gradient on a 2D grid"
.pN sdlapl.dat "   Laplacian of the spin density on a 2D grid"
.pN mo.dat     "       Molecular orbital values on a 3D grid"
.pN mo.pov     "       MegaPov input file for rendering an image of the MO in mo.dat"

.eL "FILES UPDATED"

.SH INPUT FORMAT
.LP
The following command-line arguments will be available in the future:
.IP "\fI-quiet\fP"
This gives the same result as \fBPRINT=0\fP.

.IP "\fI-o fname\fP"
Gives the filename for the output file.  Defaults to output.dat.

Additional input for this program is read from the file
.pN INPUT . Most of the keywords are not neccessary for routine
tasks. The following keywords are valid:

.IP "\fBWFN =\fP \fIboolean\fP"
Type of the wavefunction. This keyword is a "macro" that allows user to
set most of the necessary keywords. The following values are recognized :

\fBWFN = \fPSCF - equivalent to \fBREAD_OPDM = \fPfalse;

\fBWFN = \fPCI  - equivalent to \fBREAD_OPDM = \fPtrue, \fBOPDM_FILE = \fP40, 
\fBOPDM_BASIS = \fPAO, \fBOPDM_FORMAT = \fPTRIANG;

\fBWFN = \fPCCD,CCSD,CCSD_T,CCSDT1,CCSDT - equivalent to \fBEAD_OPDM = \fPtrue,
\fBOPDM_FILE = \fP79, \fBOPDM_BASIS = \fPAO, \fBOPDM_FORMAT = \fPTRIANG;

\fBWFN = \fPQVCCD - equivalent to \fBREAD_OPDM = \fPtrue, \fBOPDM_FILE = \fP76,
\fBOPDM_BASIS = \fPSO, \fBOPDM_FORMAT = \fPTRIANG;


.IP "\fBREAD_OPDM =\fP \fIboolean\fP"
This flag specifies if the one-particle density matrix to be read from disk.
Default is false.

.IP "\fBOPDM_FILE =\fP \fIinteger\fP"
Specifies one-particle density matrix file number. Default is 40 (master file).
To provide backward compatibility with the earlier PSI property packages
(\fBproper\fP, \fBciprop\fP, \fBccprop\fP) special format of the density
file is assumed when \fBOPDM_FILE = 40\fP (computing properties from CI
density - \fBciprop\fP compatibility mode) and \fBOPDM_FILE = 79\fP 
(computing properties from CC density - \fBccprop\fP compatibility mode).
As of now, in generic case onepdm must be written in the very beginning of 
the file. In the future PSI will have a standard onepdm file.

.IP "\fBOPDM_BASIS =\fP \fIstring\fP"
This option may not exist in the future. As of February 1st, 1998, a standard 
for the onepdm file format has not been set. This keyword should be set to
either "SO" (read in onepdm matrix in SO basis) or "AO" (in AO
basis). Default is "SO".

.IP "\fBOPDM_FORMAT = \fP \fIstring\fP"
This option may not exist in the future. This keyword should be set to
either "TRIANG" (read in onepdm matrix in lower triangular form) of "SQUARE"
(in square form). Default is "TRIANG"

.IP "\fBASYMM_OPDM = \fP \fIboolean\fP"
This flag specifies 
whether one-particle density matrix has to be symmetrized.
Must be set to true if generic non-symmetric onepdm to be read 
(for example, from a coupled-cluster program). This keyword is for
code development only. Existing PSI CC codes now in use produce 
symmetric onepdm, therefore there is no need to use this keyword. 
Default is false.

.IP "\fBCORREL_CORR =\fP \fIboolean\fP"
Flag for computing correlation corrections for electric multipole moments
using Z-vector in external file (default - file86) produced by 
.B cphfci
. Default is false.

.IP "\fBZVEC_FILE = \fP \fIinteger\fP"
Specifies Z-vector file number. This keyword is mostly intended for future use,
since currently \fBcphfci\fP code is hardwired to write Z-vector to file86.
Default is 86.

.IP "\fBDELETE_ZVEC =\fP \fIboolean\fP"
This flag specifies whether file containing Z-vector to be deleted after the
calculation or not. Default is true.

.IP "\fBMPMAX =\fP \fIinteger\fP"
This integer between 1 and 3 specifies the highest electric multipole 
moment to be computed.

\fBMPMAX = \fP1 - only electric dipole moment will be computed (default);

\fBMPMAX = \fP2 - electric dipole and quadrupole moments will be computed;
\fBMPMAX = \fP3 - electric dipole, quadrupole, and octopole moments will be computed. 

.IP "\fBMP_REF\fP \fIinteger\fP"
This parameter specifies the reference point for the electric multipole
moments calculation.

\fBMP_REF = \fP0 (default) or 1 - the center of mass;

\fBMP_REF = \fP2 - the origin of the space coordinate system;

\fBMP_REF = \fP3 - the center of electronic charge;

\fBMP_REF = \fP4 - the center of nuclear charge;

\fBMP_REF = \fP5 - the center of net charge.

\fBCAUTION :\fP According to classical electrodynamics, the electric 2^(n+1)-pole 
moment is independent of the reference point only if the electric 2^(n)-pole 
moment is vanishing. It means that the dipole moment will depend on the
reference point if the total charge of the system is non-zero. By analogy,
electric quadrupole moment will depend on the reference point if the system 
possesses non-zero electric dipole moment, etc.

.IP "\fBMP_REF_XYZ =\fP \fIreal_vector\fP"
This vector specifies the coordinates of the reference point. If this
keyword is present in the input \fBMP_REF\fP keyword will be disregarded.

.IP "\fBNUC_ESP =\fP \fIboolean\fP"
This flag specifies if electrostatic properties will be computed at the
nuclei. Current list includes electrostatic potential, electric field,
electric field gradient, electron and spin density, and anisotropic
constribution to the hyperfine coupling constants (the latter two
require setting \fBSPIN_PROP\fP to true). Default is true.

.IP "\fBGRID =\fP \fIinteger\fP"
Specifies type of property to be evaluated over a grid.

\fBGRID = \fP0 (default) - compute nothing;

\fBGRID = \fP1 - electrostatic potential on a two-dimensional grid;

\fBGRID = \fP2 - electron density (spin density if \fBSPIN_PROP\fP is set to true) on
a two-dimensional grid;

\fBGRID = \fP3 - electron density gradient (spin density gradient if \fBSPIN_PROP\fP is set to true) on
a two-dimensional grid;

\fBGRID = \fP4 - Laplacian of the electron density (Laplacian of the spin density if 
\fBSPIN_PROP\fP is set to true) on a two-dimensional grid. According to the convention
used in the field, what actually gets plotted are the Laplacians taken with negative sign.

\fBGRID = \fP5 - values of molecular orbitals on a three-dimensional grid.

.IP "\fBMO_TO_PLOT =\fP \fIinteger\fP"
Specifies the index of the molecular orbital to be plotted. It in Pitzer ordering
(ordered accoring to irreps, not eigenvalues). Ranges from 1 to the number of MOs.
Default is 1.

.IP "\fBGRID_ORIGIN =\fP \fIreal_vector\fP"
Specifies origin of the coordinate system associated with the grid. 
There is no default.

.IP "\fBGRID_UNIT_X =\fP \fIreal_vector\fP"
This vector specifies the direction of the x-axis of the coordinate system associated with the grid 
in terms of the unit vectors of the reference three-dimensional coordinate system.
If it is not normalized - it will be normalized by the program. There is no default.

.IP "\fBGRID_UNIT_Y =\fP \fIreal_vector\fP"
The same for the y-axis. It does not have to be neither normalized nor 
orthogonal to GRID_UNITX - it will be orthonormalized automatically.
There is no default.

.IP "\fBGRID_XY0 =\fP \fIreal_2d_vector\fP"
Specifies the coordinates of the lower left corner of the grid rectangle in 
the 2D coordinate system defined by GRID_UNIT_X and GRID_UNIT_Y. 
There is no default.

.IP "\fBGRID_XY1 =\fP \fIreal_2d_vector\fP"
Specifies the coordinates of the upper right corner of the grid rectangle in 
the 2D coordinate system defined by GRID_UNIT_X and GRID_UNIT_Y. 
There is no default.

.IP "\fBGRID_XYZ0 =\fP \fIreal_3d_vector\fP"
Specifies the coordinates of the far lower left corner of the grid box in 
the 3D coordinate system defined by orthonormalized GRID_UNIT_X, GRID_UNIT_Y, and their cross-product.
There is no default.

.IP "\fBGRID_XYZ1 =\fP \fIreal_3d_vector\fP"
Specifies the coordinates of the near upper right corner of the grid box in 
the 3D coordinate system defined by orthonormalized GRID_UNIT_X, GRID_UNIT_Y, and their cross-product.
There is no default.

.IP "\fBNIX =\fP \fIinteger\fP"
Number of intervals the grid box to be divided along x-coordinate. This parameter 
has to be greater than 0. Default is 10.

.IP "\fBNIY =\fP \fIinteger\fP"
See \fBNIX\fP. Default is 10.

.IP "\fBNIZ =\fP \fIinteger\fP"
See \fBNIX\fP. Default is 10.

.IP "\fBGRID_ZMIN =\fP \fIdouble\fP"
Lower limit on displayed z-values for contour plots of electron density and 
its Laplacian. Default is 0.0

.IP "\fBGRID_ZMAX =\fP \fIdouble\fP"
Upper limit on displayed z-values for contour plots of electron density and 
its Laplacian. Default is 3.0

.IP "\fBEDGRAD_LOGSCALE =\fP \fIinteger\fP"
Controls logarithmic scaling of the produced electron density gradient 
plot. Turns the scaling off if set to zero, otherwise the higher value - 
the stronger the gradient field will be scaled.
Recommended value (default) is 5.

.IP "\fBSPIN_PROP =\fP \fIboolean\fP"
Flag for computing spin properties (Mulliken population analysis of alpha
and beta densities, spin densities and anisotropic contributions to the
hyperfine coupling constants at atomic centers). Default is false.

.IP "\fBWRT_DIPINTS =\fP \fIboolean\fP"
This flag is for writing the dipole moment integrals in SO basis to binary
file. The matrices are written in a lower triangular form in XYZ order.
Default is false.

.IP "\fBDIP_FILE =\fP \fIinteger\fP"
File number for dipole moment integrals. Default is 59.

.IP "\fBPRINT =\fP \fIinteger\fP"
This is the most important keyword - it determines amount of information
printed. The following values are currently used :

\fBPRINT = \fP0 - quiet mode - print out essential results only - "compact" results
of Mulliken population analysis, electric multipole moments, 
and electrostatic properties;

\fBPRINT = \fP1 (default) - all of the above plus list of tasks to be performed
and list of caculation parameters;

\fBPRINT = \fP2 - all of the above plus Mulliken AO population matrix and
electronic and nuclear components of electric dipole moment;

\fBPRINT = \fP3 - all of the above plus density matrix in AO basis and dipole
moment integrals in AO (and SO) basis;

\fBPRINT = \fP4 - all of the above plus basis set information, natural orbitals
in terms of symmetry orbitals, overlap matrix;

\fBPRINT >= \fP5 - all of the above plus coupling coefficient vectors, 
an occupation vector, and a modified Z-vector in MO basis.


.SH GRID OUTPUT AND PLOTTING
.LP
Currently, 
.B oeprop
produces output of two-dimensional grids ready for plotting with a program 
.B PLOTMTV 
version 1.3.2. The program is written by Kenny Toh (ktoh@td2cad.intel.com), 
software developer for the Technology CAD Department, Intel Corp, Santa Clara. 
It is a freeware package, and can be downloaded off the Internet.

Three-dimensional grids are output in format suitable for plotting with a program
.B MegaPov
version 0.5. This freeware program is a patched version of POV-Ray. It is developed by a number of people, and
can be downloaded off the Internet (go to
.B http://nathan.kopp.com/patched.htm
to find out more info). To render an MO image, edit (if necessary) command file
.B mo.pov
created by
.B oeprop
, and execute
.B megapovplus +Imo.pov
.
For more options run
.B megapovplus -h
.