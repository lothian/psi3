include @top_objdir@/src/lib/MakeVars
include @top_objdir@/src/lib/libint/MakeVars

VPATH = .:$(top_srcdir)/src/lib/libint
TARGET = $(top_objdir)/lib/libint.a
HEADERS = libint.h vrr_header.h hrr_header.h

#
# List all generated routines. Do it a safe way in case the list is too long
#
TRUESRC1 = $(shell echo `ls vrr_order_*.c`)
TRUESRC2 = $(shell echo `ls hrr_order_*.c`)
TRUESRC3 = $(shell echo `ls build_*.c`)
TRUESRC4 = $(shell echo `ls hrr[1,3]_build_*.c`)
TRUESRC5 = init_libint.c $(LIB_SRC)
LIBOBJ1 = $(TRUESRC1:%.c=%.o)
LIBOBJ2 = $(TRUESRC2:%.c=%.o)
LIBOBJ3 = $(TRUESRC3:%.c=%.o)
LIBOBJ4 = $(TRUESRC4:%.c=%.o)
LIBOBJ5 = $(TRUESRC5:%.c=%.o)
LIBOBJ = $(LIBOBJ1) $(LIBOBJ2) $(LIBOBJ3) $(LIBOBJ4) $(LIBOBJ5)

default:: install

%.$(OBJSUF): %.c
	$(CC) $(CFLAGS) -c $< $(OUTPUT_OPTION)

#
# do installations
#

install:: install_inc install_target install_man

install_inc::

$(TARGET): $(LIBOBJ)
	$(MKDIRS) `dirname $(TARGET)`
	rm -f `basename $(TARGET)`
	$(AR) $(ARFLAGS) `basename $(TARGET)` $(LIBOBJ1)
	$(AR) $(ARFLAGS) `basename $(TARGET)` $(LIBOBJ2)
	$(AR) $(ARFLAGS) `basename $(TARGET)` $(LIBOBJ3)
	$(AR) $(ARFLAGS) `basename $(TARGET)` $(LIBOBJ4)
	$(AR) $(ARFLAGS) `basename $(TARGET)` $(LIBOBJ5)
	$(RANLIB) `basename $(TARGET)`

install_target:: $(TARGET)
	$(MKDIRS) $(libdir)
	$(INSTALL_DATA) `basename $<` $(libdir)
	$(RANLIB) $(libdir)/`basename $(TARGET)`

install_man::

install_inc:: $(HEADERS)
	$(MKDIRS) $(objincdir)
	$(INSTALL_INCLUDE) $^ $(objincdir)

#
# clean up
#

clean:: iclean oclean dclean targetclean

iclean:
	-rm -f *.gbl *.lcl

oclean:
	-rm -f *.o

dclean:
	-rm -f *.d

targetclean:
	-rm -f `basename $(TARGET)`
